version: '3.8'

services:

  nginx:
    restart: always
    image: nginx
    container_name: nginx
    volumes:
      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - django_gunicorn

  django_gunicorn:
    restart: always
    container_name: django_gunicorn
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/proj
    env_file:
      - .env
    ports:
      - "5000:5000"
    entrypoint: sh /entrypoint.sh

  worker:
    #    restart: always
    depends_on:
      - postgres
    entrypoint: [ "celery", "--workdir=.", "-A", "proj", "worker", "--concurrency=1" ]

    container_name: worker
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./:/proj

  celery_beat:
    #    restart: always
    depends_on:
      - postgres
    entrypoint: [ "celery", "--workdir=.", "-A", "proj", "beat", "-l", "warning", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler" ]

    container_name: celery_beat
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./:/proj

  redis:
    #    restart: always
    image: redis
    container_name: redis
    env_file:
      - .env
    ports:
      - "6379:6379"
    command: redis-server ${REDIS_ARGS}

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_INITDB_ARGS: "-A md5"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  postgres_data:

