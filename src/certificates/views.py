from django.contrib import messages
from django.contrib.auth import login, logout
from django.contrib.auth.mixins import LoginRequiredMixin
from django.shortcuts import render, redirect
from django.views.generic import ListView, CreateView, UpdateView, DetailView, DeleteView

from .forms import CertificateCreateForm, UserLoginForm, CertificateEditForm, CourseCreateForm, CourseEditForm
from .models import Certificate, Course


def user_login(request):
    if request.user.is_authenticated:
        return redirect('home')
    if request.method == 'POST':
        form = UserLoginForm(data=request.POST)
        if form.is_valid():
            user = form.get_user()
            login(request, user)
            messages.success(request, '–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã')
            next_page = request.GET.get('next', 'home')
            return redirect(next_page)
    else:
        form = UserLoginForm()
    return render(request, 'login.html', {'form': form})


def user_logout(request):
    """–î–µ–∞–≤—Ç–æ—Ä–∏–∑—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ home"""
    logout(request)
    return redirect('login')


class CertificateList(LoginRequiredMixin, ListView):
    model = Certificate
    template_name = 'certificates/certificate_list.html'
    context_object_name = 'certificates'
    extra_context = {'title': '–°–ø–∏—Å–æ–∫ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–π –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏'}


class CertificateDetail(LoginRequiredMixin, DetailView):
    model = Certificate
    template_name = 'certificates/certificate_detail.html'
    context_object_name = 'certificate'
    extra_context = {'title': '–£–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ'}


class CertificateCreate(LoginRequiredMixin, CreateView):
    model = Certificate
    template_name = 'certificates/certificate_create.html'
    context_object_name = 'certificate'
    form_class = CertificateCreateForm
    extra_context = {'title': '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è'}

    def form_valid(self, form):
        messages.success(
            self.request,
            '–£–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ. –ß—Ç–æ–±—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ',
        )
        return super().form_valid(form)


class CertificateEdit(LoginRequiredMixin, UpdateView):
    model = Certificate
    context_object_name = 'certificate'
    template_name = 'certificates/certificate_edit.html'
    extra_context = {'title': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è'}
    form_class = CertificateEditForm

    def form_valid(self, form):
        messages.success(self.request, '–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
        return super().form_valid(form)


class CourseList(LoginRequiredMixin, ListView):
    model = Course
    template_name = 'certificates/course_list.html'
    context_object_name = 'courses'
    extra_context = {'title': '–°–ø–∏—Å–æ–∫ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–π –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏'}


class CourseDetail(LoginRequiredMixin, DetailView):
    model = Course
    template_name = 'certificates/course_detail.html'
    context_object_name = 'course'
    extra_context = {'title': 'üìö –ö—É—Ä—Å'}


class CourseCreate(LoginRequiredMixin, CreateView):
    model = Course
    template_name = 'certificates/course_create.html'
    context_object_name = 'course'
    form_class = CourseCreateForm
    extra_context = {'title': 'üìö –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞'}

    def form_valid(self, form):
        messages.success(
            self.request,
            '–£–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ. –ß—Ç–æ–±—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ',
        )
        return super().form_valid(form)


class CourseEdit(LoginRequiredMixin, UpdateView):
    model = Course
    context_object_name = 'course'
    template_name = 'certificates/course_edit.html'
    extra_context = {'title': 'üìö –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞'}
    form_class = CourseEditForm

    def form_valid(self, form):
        messages.success(self.request, '–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
        return super().form_valid(form)


class CourseDelete(LoginRequiredMixin, DeleteView):
    model = Course
    context_object_name = 'course'
    template_name = 'certificates/course_delete.html'
    extra_context = {'title': '–£–¥–∞–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞'}
    # form_class = CourseEditForm

    def form_valid(self, form):
        messages.success(self.request, '–ö—É—Ä—Å —É–¥–∞–ª—ë–Ω')
        return super().form_valid(form)
